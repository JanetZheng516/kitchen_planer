{"version":3,"sources":["components/layout/Navbar.js","components/layout/Postscard.js","components/show/IngredientList.js","components/show/RecipeList.js","components/post/PostItems.js","components/show/Alert.js","components/post/Addingredient.js","components/post/Addrecipe.js","App.js","index.js"],"names":["Navbar","className","href","Component","Postscard","props","onDayChange","evt","setState","day","target","value","onMealChange","meal","onPostClick","postItem","state","clearState","onUpdateClick","updateItem","ingredients","recipe","prevProps","currentEditItem","this","id","onChange","type","onClick","IngredientList","length","map","ingredient","index","key","removeIngredient","item","RecipeList","PostItems","days","toggleItemComponents","itemToToggle","dontHide","itemsToShow","find","filter","push","weekday","Date","getDay","itemAddedTo","items","dayItems","dayColor","style","textTransform","color","showList","itemToShow","isListEmpty","deleteItem","editItem","openRecipeModal","openIngredientModal","Alert","alertText","Addingredient","onAddClick","postIngredient","ingredientInput","focus","capitalizeSentence","clearTimeout","alertTimeout","setTimeout","hasUnmounted","str","charAt","toUpperCase","slice","onIngredientChange","closeIngredientModal","placeholder","ref","input","Addrecipe","onSaveClick","postRecipe","onRecipeChange","closeRecipeModal","clearRecipe","App","showIngredientModal","showRecipeModal","itemToAddIngredientTo","itemToAddRecipeTo","storeItems","localStorage","setItem","JSON","stringify","itemToPost","itemToDelete","allItemsWithoutDeletedItem","itemToEdit","updatedItem","ingredientToPost","itemToRemoveFrom","indexToRemove","splice","recipeToPost","parse","getItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb902d93.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Navbar extends Component {\n    render() {\n        return (\n    <nav>\n        <div className=\"container\">\n            <a href=\"http://localhost:3000\" className=\"logo\">Kitchen Planner</a>\n        </div>\n    </nav>\n        )\n    }\n}\n\nexport default Navbar\n","import React, { Component } from 'react';\n\nclass Postscard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            day: '',\n            meal: '',\n            ingredients: [],\n            recipe: ''\n        };\n    }\n\n    onDayChange = evt => this.setState({day: evt.target.value});\n\n    onMealChange = evt => this.setState({meal: evt.target.value});\n\n    onPostClick = () => {\n        this.props.postItem({...this.state});\n        this.clearState();\n    }\n\n    onUpdateClick = () => {\n        this.props.updateItem({...this.state});\n        this.clearState();\n    }\n\n    clearState = () => this.setState({day: '', meal: '', ingredients: [], recipe: ''});\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentEditItem !== this.props.currentEditItem && this.props.currentEditItem) {\n            this.setState({...this.props.currentEditItem});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"postsContainer\">\n                <div className=\"card\">\n                    <span className=\"card-title\">What are we going to eat today?</span>\n\n                    <div className=\"row\">\n                        <div className=\"post\">\n                            <label className=\"item-name\">Day</label>\n                            <select id=\"date\" className=\"form-control\" value={this.state.day} onChange={this.onDayChange}>\n                                <option value=\"\"></option>\n                                <option value=\"monday\">Monday</option>\n                                <option value=\"tuesday\">Tuesday</option>\n                                <option value=\"wednesday\">Wednesday</option>\n                                <option value=\"thursday\">Thursday</option>\n                                <option value=\"friday\">Friday</option>\n                                <option value=\"saturday\">Saturday</option>\n                                <option value=\"sunday\">Sunday</option>\n                            </select> \n                        </div>\n\n                        <div className=\"post\">\n                            <label className=\"item-name\">Meal</label>\n                            <input type=\"text\" id=\"meal\" className=\"form-control\" value={this.state.meal} onChange={this.onMealChange} />\n                        </div>\n                    </div>\n\n                    {this.props.currentEditItem ? (\n                        <button className=\"btn\" onClick={this.onUpdateClick}>Update</button>\n                    ) : (\n                        <button className=\"btn\" onClick={this.onPostClick}>Post</button>\n                    )}\n                </div>\n                \n            </div>   \n        )\n    }\n}\n\nexport default Postscard\n","import React, { Component } from 'react'\n\nclass IngredientList extends Component {\n    render() {\n        if (!this.props.ingredients.length) {\n            return '';\n        }\n        return (\n           <ul className=\"list-group\">\n              {this.props.ingredients.map((ingredient, index) => (\n                  <li key={index} className='item-list'>\n                      {ingredient} \n                      <a href=\"#\" className=\"secondary-content remove\" onClick={() => this.props.removeIngredient(this.props.item, index)} ><i className=\"fas fa-minus-circle\"></i></a> \n                  </li>\n              ))}\n           </ul>\n        )\n    }\n}\n\nexport default IngredientList\n","import React, { Component } from 'react'\n\nclass RecipeList extends Component {\n    render() {\n        if (!this.props.recipe) {\n            return '';\n        }\n        return (\n           <div className=\"box\">\n              {this.props.recipe}\n           </div>\n        )\n    }\n}\n\nexport default RecipeList\n","import React, { Component, Fragment } from 'react';\nimport IngredientList from '../show/IngredientList';\nimport RecipeList from '../show/RecipeList';\n\n\n\n\nclass PostItems extends Component {\n    days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemsToShow: []\n        };\n\n        const date = new Date();\n        const weekday = date.getDay();\n        this.day = weekday > 0 ? weekday - 1 : 6;\n    }\n\n    toggleItemComponents = (itemToToggle, dontHide) => {\n        const itemsToShow = [...this.state.itemsToShow];\n        const itemIsShown = itemsToShow.find(item => item === itemToToggle);\n        if (itemIsShown && !dontHide) {\n            // hide\n            this.setState({ itemsToShow: itemsToShow.filter(item => item !== itemToToggle) });\n        } else {\n            // show\n            itemsToShow.push(itemToToggle);\n            this.setState({ itemsToShow });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        // First time itemAdded to is different from empty/last time item\n        if (prevProps.itemAddedTo !== this.props.itemAddedTo) {\n            this.toggleItemComponents(this.props.itemAddedTo, true);\n        }\n    }\n\n    render() {\n        return (\n\n            <div className=\"postsContainer\">\n                {this.props.items && this.props.items.length ? <span className=\"card-title\">My weekly menu</span> : null}\n                {this.days.map((day, index) => {\n                    const dayItems = (this.props.items || []).filter(item => item.day === day);\n                    if (!dayItems.length) {\n                        return '';\n                    }\n                    const dayColor = this.day === index ? 'pink' : 'inherit'; \n                    return (\n                        <div key={day} className=\"menu\">\n                            <ul>\n                                <strong id=\"weekday\" className=\"list-title\" style={{textTransform: 'capitalize', color: dayColor}}>{day}</strong>\n                                    {dayItems.map((item, index) => {\n                                        if (item.day === day) {\n                                            const showList = this.state.itemsToShow.find(itemToShow => itemToShow === item);\n                                            const isListEmpty = (!item.ingredients || !item.ingredients.length) && !item.recipe;\n                                            return (\n                                                <li className=\"collection-item\" key={`${day}-${index}`}>\n                                                    <div className=\"input\">\n                                                        {!isListEmpty && <a className=\"toggle\" onClick={() => this.toggleItemComponents(item)}><i className={`fas fa-chevron-${!showList ? 'down' : 'up'}`}></i></a>}\n                                                        <p> {item.meal} </p> \n                                                    </div>\n                                                    <div>\n                                                        <a className=\"secondary-content delete\" onClick={() => this.props.deleteItem(item)} ><i className=\"fas fa-trash-alt\"></i></a>\n                                                        <a className=\"secondary-content edit\" onClick={() => this.props.editItem(item)}><i className=\"edit-item fa fa-pencil\"></i></a>\n                                                        <a className=\"secondary-content add-recipe\" id=\"myBtnAddrecipe\" onClick={() => this.props.openRecipeModal(item)}><i className=\"fas fa-book-medical\"></i></a>\n                                                        <a className=\"secondary-content add-item\" id=\"myBtnAddIngredient\" onClick={() => this.props.openIngredientModal(item)}><i className=\"fas fa-cart-plus\"></i></a>\n                                                    </div>\n\n                                                    {showList && <IngredientList item={item} ingredients={item.ingredients} removeIngredient={this.props.removeIngredient} />}\n\n                                                    {showList && <RecipeList item={item} recipe={item.recipe}/> }\n                                                </li>\n\n                                            )\n                                        }\n                                        return '';\n                                    })}\n                            </ul>\n                        </div>\n                    )\n                })}\n            </div>\n\n        )\n    }\n}\n\nexport default PostItems\n","import React, { Component } from 'react'\n\nexport class Alert extends Component {\n    render() {\n        return (\n            <div className=\"alert\">\n                {this.props.alertText}\n            </div>\n        )\n    }\n}\n\nexport default Alert\n","import React, { Component } from 'react'\nimport Alert from '../show/Alert'\n\nclass Addingredient extends Component {\n    componentDidMount() {\n        this.ingredientInput.focus();\n        this.hasUnmounted = false;\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ingredient: '',\n            alertText: ''\n        }\n\n        this.alertTimeout = null;\n    }\n\n    componentWillUnmount() {\n        this.hasUnmounted = true;\n    }\n    \n    onAddClick = () => {\n        this.props.postIngredient(this.state.ingredient);\n        this.setState({ingredient:''}, () => {\n            this.ingredientInput.focus();\n        });\n\n        const alertText = this.capitalizeSentence(`${this.state.ingredient} added to ${this.props.item.meal}`);\n        this.setState({ alertText }, () => {\n            clearTimeout(this.alertTimeout);\n            this.alertTimeout = setTimeout(() => {\n                if (!this.hasUnmounted) {\n                    this.setState({ alertText: ''});\n                }\n            }, 3000);\n        });\n    }\n\n    capitalizeSentence = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    onIngredientChange = evt => this.setState({ingredient: evt.target.value});\n\n    render() {\n        return (\n        <div className=\"postsContainer\">\n         \n            <div id=\"myModalIngredient\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <span className=\"close\"  onClick={() => this.props.closeIngredientModal()}>&times;</span>\n                        {this.state.alertText ? <Alert alertText={this.state.alertText}/> : null}\n                        <div className=\"add\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control ingredient\" \n                                placeholder=\"Add new ingredient here\" \n                                onChange={this.onIngredientChange} \n                                value={this.state.ingredient}\n                                ref={(input) => {this.ingredientInput = input}} />\n                            <button className=\"btn adding\" onClick={this.onAddClick}>Add</button>\n                        </div>\n                </div>\n            </div>\n         \n        </div>\n        )\n    }\n}\n\nexport default Addingredient\n","import React, { Component } from 'react'\n\nclass Addrecipe extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n           recipe: ''\n        }\n\n    }\n\n\n    onSaveClick = () => {\n        this.props.postRecipe(this.state.recipe);\n        this.setState({recipe: ''})\n    }\n\n    onRecipeChange = evt => this.setState({recipe: evt.target.value});\n\n    componentDidMount () {\n        this.setState({recipe: this.props.item.recipe})\n    }\n\n    render() {\n        return (\n            <div className=\"postsContainer\">\n                <div id=\"myModalRecipe\" className=\"modal\"> \n                    <div className=\"modal-content\">\n                                <span className=\"close\" onClick={() => this.props.closeRecipeModal()}>&times;</span>\n                                <textarea placeholder=\"Add your recipe...\" onChange={this.onRecipeChange} value={this.state.recipe}></textarea>\n                                <div className=\"modalControl\">\n                                    <button className=\"btn save\" onClick={this.onSaveClick}>Save</button>\n                                    <button className=\"btn clear\" onClick={this.props.clearRecipe}>Clear</button>\n                                </div>  \n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Addrecipe\n","import React, {Component} from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Postscard from './components/layout/Postscard';\nimport PostItems from './components/post/PostItems';\nimport Addingredient from './components/post/Addingredient';\nimport Addrecipe from './components/post/Addrecipe';\nimport './scss/App.scss';\n\n\n\nclass App extends Component {\n\n  state = {\n    items: [],\n    currentEditItem: null,\n    showIngredientModal: false,\n    showRecipeModal: false,\n    itemToAddIngredientTo: null,\n    itemToAddRecipeTo: null,\n    itemAddedTo: null\n  }\n\n  \n  storeItems = () => {\n    const items = [...this.state.items];\n    localStorage.setItem('items', JSON.stringify(items));\n  }\n\n  postItem = itemToPost => {\n    const items = [...this.state.items];\n    items.push(itemToPost);\n    this.setState({items}, () => {\n      this.storeItems();\n    });\n  }\n\n  deleteItem = itemToDelete => {\n    const items = [...this.state.items];\n    const allItemsWithoutDeletedItem = items.filter(item => item !== itemToDelete);\n    this.setState({items: allItemsWithoutDeletedItem}, () => {\n      this.storeItems();\n    });\n  }\n\n  // Get current item popup to edit\n  editItem = itemToEdit => this.setState({currentEditItem: itemToEdit}); \n\n  // Update new item\n  updateItem = updatedItem => {\n    const items = [...this.state.items];\n    this.setState({\n      items: items.map(item => {\n        if (item === this.state.currentEditItem) {\n          return updatedItem;\n        }\n        return item;\n      }),\n      currentEditItem: null\n    }, () => {\n      this.storeItems();\n    });\n  }\n\n  openIngredientModal = item => {\n    this.setState({showIngredientModal: true, itemToAddIngredientTo: item})\n  }\n\n  openRecipeModal = item => {\n    this.setState({showRecipeModal: true, itemToAddRecipeTo: item})\n  }\n\n  closeIngredientModal = () => {\n    this.setState({showIngredientModal: false})\n  }\n\n  closeRecipeModal = () => {\n    this.setState({showRecipeModal: false})\n  }\n\n  postIngredient = ingredientToPost => {\n    const items = [...this.state.items];\n    this.setState({\n      items: items.map(item => {\n        if (item === this.state.itemToAddIngredientTo) {\n          item.ingredients.push(ingredientToPost);\n        }\n        return item;\n      }),\n      itemAddedTo: this.state.itemToAddIngredientTo\n    }, () => {\n      this.storeItems();\n    });\n  }\n\n  removeIngredient = (itemToRemoveFrom, indexToRemove) => {\n    const items = [...this.state.items].map(item => {\n      if (item === itemToRemoveFrom) {\n        item.ingredients.splice(indexToRemove, 1);\n      }\n      return item;\n    });\n    this.setState({items}, () => {\n      this.storeItems();\n    });\n  }\n\n  postRecipe = recipeToPost => {\n    const items = [...this.state.items];\n    this.setState({\n      items: items.map(item => {\n        if (item === this.state.itemToAddRecipeTo) {\n          item.recipe = recipeToPost;\n        }\n        return item;\n      })\n    });\n    this.setState({showRecipeModal: false, itemAddedTo: this.state.itemToAddRecipeTo}, () => {\n      this.storeItems();\n    })\n  }\n\n  clearRecipe = () => {\n    const items = [...this.state.items];\n    this.setState({\n      items: items.map(item => {\n        if (item === this.state.itemToAddRecipeTo) {\n          item.recipe = '';\n        }\n        return item;\n      })\n    })\n    this.setState({showRecipeModal: false}, () => {\n      this.storeItems();\n    })\n  }\n\n  componentDidMount() {\n    const items = JSON.parse(localStorage.getItem(\"items\"));\n    this.setState({items: items || []})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Postscard postItem={this.postItem} updateItem={this.updateItem} currentEditItem={this.state.currentEditItem} />\n        <PostItems items={this.state.items} itemAddedTo={this.state.itemAddedTo} removeIngredient={this.removeIngredient} deleteItem={this.deleteItem} editItem={this.editItem} openIngredientModal={this.openIngredientModal} openRecipeModal={this.openRecipeModal} />\n        {this.state.showIngredientModal ? <Addingredient closeIngredientModal={this.closeIngredientModal} postIngredient={this.postIngredient} item={this.state.itemToAddIngredientTo} /> : null}\n        {this.state.showRecipeModal ? <Addrecipe closeRecipeModal={this.closeRecipeModal} postRecipe={this.postRecipe} item={this.state.itemToAddRecipeTo} clearRecipe={this.clearRecipe} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n"],"sourceRoot":""}